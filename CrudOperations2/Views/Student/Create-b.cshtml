@model CrudOperations2.Models.student

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create","Student",FormMethod.Post,new {enctype="multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>student</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*<div class="form-group">
            @Html.LabelFor(model => model.idstudent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.idstudent, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.idstudent, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="input-group">
                <span class="input-group-addon"><i class="fas fa-user"></i></span>
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.Std, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Std, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Std, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <div class="form-group">

        @Html.LabelFor(model => model.Std, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="input-group">
                <span class="input-group-addon">
                    <i class="fas fa-book"></i>

                </span>
                @Html.DropDownList("STD", new List<SelectListItem>
                {
                    new SelectListItem { Text = "1st", Value = "1", Selected=true},
        new SelectListItem { Text = "2nd", Value = "2"},
        new SelectListItem { Text = "3rd", Value = "3"},
        new SelectListItem { Text = "4th", Value = "4"},
        new SelectListItem { Text = "5th", Value = "5"},
        new SelectListItem { Text = "6th", Value = "6"},
        new SelectListItem { Text = "7th", Value = "7"},
        new SelectListItem { Text = "8th", Value = "8"},
        new SelectListItem { Text = "9th", Value = "9"},
        new SelectListItem { Text = "10th", Value = "10"},
        new SelectListItem { Text = "11th", Value = "11"},
        new SelectListItem { Text = "12th", Value = "12"}

        }, "-----  Select Standard  -----", new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(model => model.Std, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="input-group">
                <span class="input-group-addon"><i class="glyphicon glyphicon-phone"></i></span>
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })

            </div>

            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })

        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Label("Male:") @Html.RadioButtonFor(m => m.Gender, "Male")
            @Html.Label("Female:") @Html.RadioButtonFor(m => m.Gender, "Female")
        </div>
        &nbsp;&nbsp;&nbsp;@Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Percentage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="input-group">
                <span class="input-group-addon"><i class="fas fa-percentage"></i></span>
                @Html.EditorFor(model => model.Percentage, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            @Html.ValidationMessageFor(model => model.Percentage, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.hobby, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <table>
                @{
                    IList<CrudOperations2.Models.hobby> mylist = ViewBag.hobby;
                    foreach (var h in mylist)
                    {
                        <tr>
                            <input type="checkbox" name="hobbies" value="@h.hobbiesName" />@h.hobbiesName

                        </tr>
                    }
                }
            </table>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.userImage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="file" />
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @*<input type="submit" value="Create" class="btn btn-default" />*@
            <button type="submit" value="Create" class="btn btn-success">
                <i class="fas fa-check"></i> Create
            </button>
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
